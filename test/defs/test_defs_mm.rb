# encoding: utf-8
require File.expand_path(File.dirname(__FILE__)) + '/../test_helper'

# This file is generated by the Ruby Holiday gem.
#
# Definitions loaded: definitions/mm.yaml
class MmDefinitionTests < Test::Unit::TestCase  # :nodoc:

  def test_mm
    assert_nil "New Year's Day", (Holidays.on(Date.civil(2017, 1, 1), [:mm])[0] || {})[:name]
    assert_equal "New Year's Day", (Holidays.on(Date.civil(2019, 1, 1), [:mm])[0] || {})[:name]
    assert_equal "Independence Day", (Holidays.on(Date.civil(2019, 4, 1), [:mm])[0] || {})[:name]
    assert_equal "Independence Day", (Holidays.on(Date.civil(2020, 1, 4), [:mm])[0] || {})[:name]
    assert_equal "Substitute Day", (Holidays.on(Date.civil(2020, 1, 6), [:mm])[0] || {})[:name]
    assert_equal "Union Day", (Holidays.on(Date.civil(2020, 2, 12), [:mm])[0] || {})[:name]
    assert_equal "Peasants' Day", (Holidays.on(Date.civil(2020, 3, 2), [:mm])[0] || {})[:name]
    assert_equal "Full Moon Day of Taboung", (Holidays.on(Date.civil(2020, 3, 8), [:mm])[0] || {})[:name]
    assert_equal "Substitute Day", (Holidays.on(Date.civil(2020, 3, 9), [:mm])[0] || {})[:name]
    assert_equal "Armed Forces' Day", (Holidays.on(Date.civil(2020, 3, 27), [:mm])[0] || {})[:name]
    assert_equal "Myanmar New Year Holiday", (Holidays.on(Date.civil(2020, 4, 10), [:mm])[0] || {})[:name]
    assert_equal "Myanmar New Year Holiday", (Holidays.on(Date.civil(2020, 4, 11), [:mm])[0] || {})[:name]
    assert_equal "Maha Thingyan (Water Festival)", (Holidays.on(Date.civil(2020, 4, 12), [:mm])[0] || {})[:name]
    assert_equal "Maha Thingyan (Water Festival)", (Holidays.on(Date.civil(2020, 4, 13), [:mm])[0] || {})[:name]
    assert_equal "Maha Thingyan (Water Festival)", (Holidays.on(Date.civil(2020, 4, 14), [:mm])[0] || {})[:name]
    assert_equal "Maha Thingyan (Water Festival)", (Holidays.on(Date.civil(2020, 4, 15), [:mm])[0] || {})[:name]
    assert_equal "Maha Thingyan (Water Festival)", (Holidays.on(Date.civil(2020, 4, 16), [:mm])[0] || {})[:name]
    assert_equal "Myanmar New Year Holiday", (Holidays.on(Date.civil(2020, 4, 17), [:mm])[0] || {})[:name]
    assert_equal "Labor Day / May Day", (Holidays.on(Date.civil(2020, 5, 1), [:mm])[0] || {})[:name]
    assert_equal "Full Moon Day of Kasong", (Holidays.on(Date.civil(2020, 5, 6), [:mm])[0] || {})[:name]
    assert_equal "Martyrs' Day", (Holidays.on(Date.civil(2020, 7, 19), [:mm])[0] || {})[:name]
    assert_equal "Substitute Day", (Holidays.on(Date.civil(2020, 6, 20), [:mm])[0] || {})[:name]
    assert_equal "Full Moon Day of Waso (Beginning of Buddhist Lent)", (Holidays.on(Date.civil(2020, 7, 3), [:mm])[0] || {})[:name]
    assert_equal "Thadingyut Holiday", (Holidays.on(Date.civil(2020, 10, 29), [:mm])[0] || {})[:name]
    assert_equal "Thadingyut Holiday", (Holidays.on(Date.civil(2020, 10, 30), [:mm])[0] || {})[:name]
    assert_equal "Full Moon Day of Thadingyut (End of Buddhist Lent)", (Holidays.on(Date.civil(2020, 10, 31), [:mm])[0] || {})[:name]
    assert_equal "Thadingyut Holiday", (Holidays.on(Date.civil(2020, 11, 1), [:mm])[0] || {})[:name]
    assert_equal "Thadingyut Holiday", (Holidays.on(Date.civil(2020, 11, 2), [:mm])[0] || {})[:name]
    assert_equal "Dasaung Taing Holiday", (Holidays.on(Date.civil(2020, 11, 27), [:mm])[0] || {})[:name]
    assert_equal "Dasaung Taing Holiday", (Holidays.on(Date.civil(2020, 11, 28), [:mm])[0] || {})[:name]
    assert_equal "Dasaung Taing Full Mon Day", (Holidays.on(Date.civil(2020, 11, 29), [:mm])[0] || {})[:name]
    assert_equal "Dasaung Taing Holiday", (Holidays.on(Date.civil(2020, 11, 30), [:mm])[0] || {})[:name]
    assert_equal "National Day", (Holidays.on(Date.civil(2020, 12, 9), [:mm])[0] || {})[:name]
    assert_equal "Christmas Day", (Holidays.on(Date.civil(2020, 12, 25), [:mm])[0] || {})[:name]
    assert_equal "New Year Eve", (Holidays.on(Date.civil(2020, 12, 31), [:mm])[0] || {})[:name]
  end
end
