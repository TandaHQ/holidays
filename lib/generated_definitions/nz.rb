# encoding: utf-8
module Holidays
  # This file is generated by the Ruby Holidays gem.
  #
  # Definitions loaded: ../definitions/nz.yaml
  #
  # All the definitions are available at https://github.com/holidays/holidays
  module NZ # :nodoc:
    def self.defined_regions
      [:nz, :nz_sl, :nz_we, :nz_ak, :nz_nl, :nz_ne, :nz_ot, :nz_ta, :nz_sc, :nz_hb, :nz_mb, :nz_ca, :nz_ch, :nz_wl]
    end

    def self.holidays_by_month
      {
              0 => [{:function => "easter(year)", :function_arguments => [:year], :function_modifier => -2, :name => "Good Friday", :regions => [:nz]},
            {:function => "easter(year)", :function_arguments => [:year], :function_modifier => 1, :name => "Easter Monday", :regions => [:nz]}],
      1 => [{:mday => 1, :observed => "to_monday_if_weekend(date)", :observed_arguments => [:date], :name => "New Year's Day", :regions => [:nz]},
            {:mday => 2, :observed => "to_weekday_if_boxing_weekend(date)", :observed_arguments => [:date], :name => "Day after New Year's Day", :regions => [:nz]},
            {:mday => 17, :name => "Southland Anniversary Day", :regions => [:nz_sl]},
            {:mday => 22, :observed => "closest_monday(date)", :observed_arguments => [:date], :name => "Wellington Anniversary Day", :regions => [:nz_we]},
            {:mday => 29, :observed => "closest_monday(date)", :observed_arguments => [:date], :name => "Auckland Anniversary Day", :regions => [:nz_ak]},
            {:mday => 29, :observed => "closest_monday(date)", :observed_arguments => [:date], :name => "Northland Anniversary Day", :regions => [:nz_nl]}],
      2 => [{:mday => 1, :observed => "closest_monday(date)", :observed_arguments => [:date], :name => "Nelson Anniversary Day", :regions => [:nz_ne]},
            {:mday => 6, :observed => "to_monday_if_weekend(date)", :observed_arguments => [:date], :name => "Waitangi Day", :regions => [:nz]}],
      3 => [{:mday => 23, :observed => "closest_monday(date)", :observed_arguments => [:date], :name => "Otago Anniversary Day", :regions => [:nz_ot]},
            {:wday => 1, :week => 2, :observed => "closest_monday(date)", :observed_arguments => [:date], :name => "Taranaki Anniversary Day", :regions => [:nz_ta]}],
      4 => [{:mday => 25, :observed => "to_monday_if_weekend(date)", :observed_arguments => [:date], :name => "ANZAC Day", :regions => [:nz]}],
      6 => [{:wday => 1, :week => 1, :name => "Queen's Birthday", :regions => [:nz]},
            {:function => "matariki_holiday(year)", :function_arguments => [:year], :name => "Matariki Holiday", :regions => [:nz]}],
      9 => [{:wday => 1, :week => 4, :name => "Dominion Day", :regions => [:nz_sc]}],
      10 => [{:wday => 1, :week => 1, :observed => "previous_friday(date)", :observed_arguments => [:date], :name => "Hawke's bay Anniversary Day", :regions => [:nz_hb]},
            {:wday => 1, :week => 4, :name => "Labour Day", :regions => [:nz]},
            {:wday => 1, :week => 4, :observed => "next_week(date)", :observed_arguments => [:date], :name => "Marlborough Anniversary Day", :regions => [:nz_mb]}],
      11 => [{:wday => 5, :week => 2, :name => "Canterbury Anniversary Day", :regions => [:nz_ca]},
            {:mday => 30, :observed => "closest_monday(date)", :observed_arguments => [:date], :name => "Chatham Island Anniversary Day", :regions => [:nz_ch]}],
      12 => [{:mday => 1, :observed => "closest_monday(date)", :observed_arguments => [:date], :name => "Westland Anniversary Day", :regions => [:nz_wl]},
            {:mday => 25, :observed => "to_monday_if_weekend(date)", :observed_arguments => [:date], :name => "Christmas Day", :regions => [:nz]},
            {:mday => 26, :observed => "to_weekday_if_boxing_weekend(date)", :observed_arguments => [:date], :name => "Boxing Day", :regions => [:nz]}]
      }
    end

    def self.custom_methods
      {
        "closest_monday(date)" => Proc.new { |date|
if [1, 2, 3, 4].include?(date.wday)
  date -= (date.wday - 1)
elsif 0 == date.wday
  date += 1
else
  date += 8 - date.wday
end
date
},

"previous_friday(date)" => Proc.new { |date|
date - 3
},

"next_week(date)" => Proc.new { |date|
date + 7
},

"matariki_holiday(year)" => Proc.new { |year|
case year
when 2022
  Date.civil(2022, 6, 4, 5)
when 2023
  Date.civil(2023, 7, 3, 5)
when 2024
  Date.civil(2024, 6, 5, 5)
when 2025
  Date.civil(2025, 6, 4, 5)
when 2026
  Date.civil(2026, 7, 2, 5)
when 2027
  Date.civil(2027, 6, 4, 5)
when 2028
  Date.civil(2028, 7, 3, 5)
when 2029
  Date.civil(2029, 7, 2, 5)
when 2030
  Date.civil(2030, 6, 4, 5)
when 2031
  Date.civil(2031, 7, 2, 5)
end
},


      }
    end
  end
end
